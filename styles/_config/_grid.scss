.l-container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: $container-padding;
  padding-left: $container-padding;

  &.-solid {
    max-width: $container-width;
  }
}

.l-grid {
  display: grid;
  width: 100%;
  margin: 0;
  padding: 0;
  list-style: none;

  &.-gutter {
    gap: map-get($grid, 'gutter');
    column-gap: map-get($grid, 'gutter');
  }

  @for $i from 1 to map-get($grid, 'cols') {
    &.-col-#{$i} {
      grid-template-columns: repeat(#{$i}, 1fr);
    }
  }
}

.l-row {
  display: flex;
  flex-flow: row wrap;

  @include mq($from: desktop) {
    width: calc(100% + #{map-get($grid, 'gutter')});
    margin-right: calc(#{map-get($grid, 'gutter')} / -2);
    margin-left: calc(#{map-get($grid, 'gutter')} / -2);
  }
}

/****************************
1 - Create grid based classes
*****************************/
@for $i from 1 to (map-get($grid, 'cols') + 1) {
  @for $k from 1 to (map-get($grid, 'cols') + 1) {
    .l-gc-#{$i}\/#{$k} {
      grid-column-start: $i;
      grid-column-end: $k;
    }
  }
}

/****************************
2 - Create flex based classes
*****************************/
@for $i from 1 to (map-get($grid, 'cols') + 1) {
  .l-col-#{$i} {
    width: 100%;

    @include mq($from: desktop) {
      width: calc(100% / (#{map-get($grid, 'cols')} / #{$i}));
      padding-right: calc(#{map-get($grid, 'gutter')} / 2);
      padding-left: calc(#{map-get($grid, 'gutter')} / 2);

      // IE11 width calculation hack
      @media all and (-ms-high-contrast: none) {
        width: calc(100% / (#{map-get($grid, 'cols')} / #{$i}) - .1px);
      }
    }

    // Grid offset/overlap classes
    @for $k from 1 to (map-get($grid, 'cols')) {
      &.-offset-#{$k} {
        margin-left: calc((100% / (#{map-get($grid, 'cols')} / #{$k})));
      }

      &.-overlap-#{$k} {
        margin-left: calc((100% / (-#{map-get($grid, 'cols')} / #{$k})));
      }
    }

  }
}

/****************************
3 - Create padding classes
*****************************/
.o-padding {
  @each $size, $padding in $paddings {
    &.-padding-#{$size} {
      padding-top: $padding
    }
  }
}
